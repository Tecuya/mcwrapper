#! /bin/bash

# mcbackup
# usage:
#  ./mcbackup <path_to_mcwrapper>

# print usage
function print_usage () {
	echo "Usage:"
	echo "  $0 <path_to_mcwrapper>"
	echo ""
}

# make sure minecraft is running via mcwrapper
# if not, exit (mcwrapper will output necessary string)
function check_status () {
	# make sure that minecraft is running in mcwrapper
	sh "$MCWRAPPER" status
	STATUS=$?
	if [[ $STATUS != 0 ]]; then
		exit $STATUS # pass the exit code on
	fi
}

# make sure mcwrapper exists
# exit in the event that we fail any tests.
function sanity_check () {
	# make sure mcwrapper exists:
	if [[ ! -e "$MCWRAPPER" ]]; then
		echo "mcwrapper not found! ($MCWRAPPER)"
		exit 1
	fi
}

# create the backup directory
function create_backup_directory () {
	mkdir -p "$CURRENT_BACKUP_PATH"
}

# stop writing to the world file(s) after flushing the buffer
function stop_writing_world () {
	sh "$MCWRAPPER" save-all
	sh "$MCWRAPPER" save-off
}

# begin writing the world data again
function start_writing_world () {
	sh "$MCWRAPPER" save-on
}

# copy the world data and configuration
function do_backup () {
	cp -R "$WORLD_DIR" "$CURRENT_BACKUP_PATH/"
	cp -R "${MINECRAFT_SERVERDIR}/"*.{txt,properties} "$CURRENT_BACKUP_PATH/"
}

function create_symlink () {
	# then we symlink the current backup to "latest" in backups directory
	if [[ -e "$BACKUP_DIR/latest" ]]; then
		# if the symlink already exists, delete it before creating it.
		rm "$BACKUP_DIR/latest"
	fi
	ln -s "$CURRENT_BACKUP_PATH" "$BACKUP_DIR/latest"
}



# path to mcwrapper
MCWRAPPER="$1"

# check to make sure that the app was used properly.
if [[ -z "$MCWRAPPER" ]]; then
	print_usage
	exit 1
fi

sanity_check
check_status

# read configurations
MINECRAFT_SERVERDIR=`sh "$MCWRAPPER" config serverdir`
BACKUP_DIR="${MINECRAFT_SERVERDIR}/backups"
WORLD_DIR="${MINECRAFT_SERVERDIR}/world"

# set backup name to
#   +%Y%m%d       -- just the datestamp; no time.
#   +%Y%m%d%H%M%S -- full timestamp including hour, minute, second
CURRENT_BACKUP_NAME=`date +%Y%m%d%H%M%S`
CURRENT_BACKUP_PATH="${BACKUP_DIR}/$CURRENT_BACKUP_NAME"

create_backup_directory
stop_writing_world
do_backup
start_writing_world
create_symlink
